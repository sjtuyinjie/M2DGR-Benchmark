<launch>
    <!-- This launch file serves as a visual confirmation that the transformation of IMU orientation works as expected.
     A world frame is set up, in which imu_link is placed with 90 deg yaw. Then, imu_link_ned is set up which corresponds
     to the same link but after applying ENU-NED frame conversion. Frame world is set as fixed frame, and both IMU
     visualizers in the rviz view are set to display orientation regarding the fixed frame (which is the world frame).
     So in this case, the axes displayed by the rviz IMU visualizers should match the imu_link and imu_link_ned
     axes visualized from TF. Please note that the frames have non-zero translation in rviz so that it is easier to
     distinguish them. But the translation has no effect on the computations, since IMU data are only transformed by
     rotation.
     
     Another confirmation of the correctness of the implementation can be got when running "tf_echo world imu_link_ned".
     The orientation in the output of this command should match the orientation that is output in imu_out/data - which
     should be orientation of the imu_link_ned frame in the world frame. -->
    <arg name="rviz" default="true" />
    <node name="tf1" pkg="tf2_ros" type="static_transform_publisher" args="0.7 0 0 1.5708 0 0 world imu_link" />
    <node name="tf2" pkg="tf2_ros" type="static_transform_publisher" args="0.5 0.5 0 1.5708 0 3.1416 imu_link imu_link_ned" />
    <node name="transformer" pkg="imu_transformer" type="imu_transformer_node">
        <param name="target_frame" value="imu_link_ned" />
    </node>
    <node name="msg" pkg="rostopic" type="rostopic" args="pub -r10 /imu_in/data sensor_msgs/Imu &quot;{header: {frame_id: 'imu_link'}, orientation: {z: 0.707, w: 0.707}}&quot;" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(dirname)/test_imu_transforms.rviz" if="$(arg rviz)" />
</launch>